/// <reference types="node" resolution-mode="require"/>
/** Retrieve the absolute path of the deploy scoped internal blob directories */
export declare const getBlobsDirs: (buildDir: string, packagePath?: string) => string[];
/**
 * Detect if there are any blobs to upload, and if so, what directory they're
 * in and whether that directory is the legacy `.netlify/blobs` path or the
 * newer deploy config API endpoint.
 *
 * @param buildDir The build directory. (current working directory where the build is executed)
 * @param packagePath An optional package path for mono repositories
 * @returns
 */
export declare const scanForBlobs: (buildDir: string, packagePath?: string) => Promise<{
    directory: string;
    isLegacyDirectory: boolean;
} | null>;
/** Given output directory, find all file paths to upload excluding metadata files */
export declare const getKeysToUpload: (blobsDir: string) => Promise<string[]>;
/** Read a file and its metadata file from the blobs directory */
export declare const getFileWithMetadata: (blobsDir: string, key: string) => Promise<{
    data: Buffer;
    metadata: Record<string, string>;
}>;
